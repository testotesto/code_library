package com.munkychop.actionscript.loading{	import com.munkychop.actionscript.events.ImageLoaderEvent;		import flash.display.Bitmap;	import flash.display.Loader;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IOErrorEvent;	import flash.net.URLRequest;		public class ImageLoader	{		//------------------------------------------------------------------------------------------		//--API		//------------------------------------------------------------------------------------------				public function ImageLoader  ()		{					}				public function loadImageList (imageList:XMLList, nodeName:String, props:Array=null):void		{			var listIndex:int = 0;			var listCount:int = 1;			var dataObject:Object;			loopThroughXML ();						function loopThroughXML ():void			{				if (imageList[listIndex] != undefined && imageList[listIndex][nodeName] != "")				{					var urlRequest:URLRequest = new URLRequest (imageList[listIndex][nodeName]);					var loader:Loader = new Loader ();					dataObject = new Object ();											if (props != null)					{						for each (var prop:String in props)						{							dataObject[prop] = imageList[listIndex][prop];						}					}											if (listIndex < imageList.length () - 1)					{						loader.contentLoaderInfo.addEventListener (Event.COMPLETE, imageLoaded);					}					else if (listIndex == imageList.length () - 1)					{						loader.contentLoaderInfo.addEventListener (Event.COMPLETE, allImagesLoaded);					}										loader.contentLoaderInfo.addEventListener (IOErrorEvent.IO_ERROR, errorHandler);					loader.load (urlRequest);				}				else				{					trace ("imageList " + listIndex + " is undefined!");				}			}						function imageLoaded (event:Event)			{				dataObject.bitmap = event.currentTarget.content;				dataObject.bitmapIndex = listIndex;				dataObject.bitmapCount = listCount;								dispatchEvent (new ImageLoaderEvent (ImageLoaderEvent.LOAD_COMPLETE, dataObject));								listIndex++;				listCount++;				loopThroughXML ();			}						function allImagesLoaded (event:Event)			{				dataObject.bitmap = event.currentTarget.content;				dataObject.bitmapIndex = listIndex;				dataObject.bitmapCount = listCount;								dispatchEvent (new ImageLoaderEvent (ImageLoaderEvent.LOAD_COMPLETE, dataObject));				dispatchEvent (new ImageLoaderEvent (ImageLoaderEvent.TOTAL_LOAD_COMPLETE, dataObject));			}						function errorHandler (event:IOErrorEvent):void			{				trace (event);			}		}				//------------------------------------------------------------------------------------------		//--Static Event Dispatcher		//------------------------------------------------------------------------------------------				protected var _eventDispatcher:EventDispatcher;				public function addEventListener (p_type:String, p_listener:Function, p_useCapture:Boolean=false, p_priority:int=0, p_useWeakReference:Boolean=false):void		{			if (_eventDispatcher == null)			{				_eventDispatcher = new EventDispatcher ();			}						_eventDispatcher.addEventListener (p_type, p_listener, p_useCapture, p_priority, p_useWeakReference);		}				public function removeEventListener (p_type:String, p_listener:Function, p_useCapture:Boolean=false):void		{			if (_eventDispatcher == null)			{				return;			}						_eventDispatcher.removeEventListener (p_type, p_listener, p_useCapture);		}				public function dispatchEvent (p_event:Event):void		{			if (_eventDispatcher == null)			{				return;			}						_eventDispatcher.dispatchEvent (p_event);		}				//------------------------------------------------------------------------------------------	}}